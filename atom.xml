<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>White&#39;s Blog</title>
  
  <subtitle>少年他的奇幻漂流</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://white8818.github.io/"/>
  <updated>2021-04-14T03:43:50.000Z</updated>
  <id>https://white8818.github.io/</id>
  
  <author>
    <name>White</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Next主题侧边栏日志404问题</title>
    <link href="https://white8818.github.io/Hexo/Next%E4%B8%BB%E9%A2%98%E4%BE%A7%E8%BE%B9%E6%A0%8F%E6%97%A5%E5%BF%97404%E9%97%AE%E9%A2%98/"/>
    <id>https://white8818.github.io/Hexo/Next主题侧边栏日志404问题/</id>
    <published>2021-04-14T03:29:43.000Z</published>
    <updated>2021-04-14T03:43:50.000Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录下出现的 问题：日志出现&lt;code&gt;Cannot GET /archives/%7C%7C%20archives/&lt;/code&gt;问题&lt;/p&gt;
&lt;p&gt;综合了网上的解决办法：&lt;/p&gt;
&lt;p&gt;1: &lt;code&gt;themes/next/_config.yml&lt;/code&gt;文件下
      
    
    </summary>
    
      <category term="Hexo" scheme="https://white8818.github.io/categories/Hexo/"/>
    
    
      <category term="Next" scheme="https://white8818.github.io/tags/Next/"/>
    
      <category term="Hexo" scheme="https://white8818.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>执行brew install命令长时间卡在Updating Homebrew的解决方法</title>
    <link href="https://white8818.github.io/Homebrew/%E6%89%A7%E8%A1%8Cbrew-install%E5%91%BD%E4%BB%A4%E9%95%BF%E6%97%B6%E9%97%B4%E5%8D%A1%E5%9C%A8Updating-Homebrew%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://white8818.github.io/Homebrew/执行brew-install命令长时间卡在Updating-Homebrew的解决方法/</id>
    <published>2021-03-03T16:29:31.000Z</published>
    <updated>2021-03-03T16:50:01.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在国内的网络环境下使用 &lt;code&gt;Homebrew&lt;/code&gt; 安装软件的过程中可能会长时间卡在 &lt;code&gt;Updating Homebrew&lt;/code&gt; 这个步骤。&lt;/p&gt;
&lt;p&gt;例：执行 &lt;code&gt;brew install ruby&lt;/code&gt; 命令&lt;/p&gt;
&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ &lt;span class=&quot;keyword&quot;&gt;brew &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;install &lt;/span&gt;ruby&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Updating Homebrew... &lt;span class=&quot;comment&quot;&gt;# 如果碰到长时间卡在这里，参考以下 2 种处理方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;p&gt;方法 1：按住control + c 取消本次更新操作&lt;/p&gt;
&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ brew install composer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;Updating&lt;/span&gt;&lt;/span&gt; Homebrew...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;按住 control + c 之后命令行会显示 ^C，就代表已经取消了 Updating Homebrew 操作&lt;/p&gt;
&lt;p&gt;大概不到 1 秒钟之后就会去执行我们真正需要的安装操作了&lt;/p&gt;
&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ brew install composer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Updating Homebrew...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C==&amp;gt; Satisfying dependencies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=&lt;span class=&quot;ruby&quot;&gt;=&amp;gt; Downloading &lt;span class=&quot;symbol&quot;&gt;https:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/getcomposer.org/download&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/1.7.2/composer&lt;/span&gt;.phar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;ruby&quot;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个方法是临时的、一次性的&lt;/p&gt;
    
    </summary>
    
      <category term="Homebrew" scheme="https://white8818.github.io/categories/Homebrew/"/>
    
    
      <category term="Homebrew" scheme="https://white8818.github.io/tags/Homebrew/"/>
    
  </entry>
  
  <entry>
    <title>SwiftCSV读取CSV数据及初步封装</title>
    <link href="https://white8818.github.io/iOS%E5%BC%80%E5%8F%91/SwiftCSV%E8%AF%BB%E5%8F%96CSV%E6%95%B0%E6%8D%AE%E5%8F%8A%E5%88%9D%E6%AD%A5%E5%B0%81%E8%A3%85/"/>
    <id>https://white8818.github.io/iOS开发/SwiftCSV读取CSV数据及初步封装/</id>
    <published>2021-01-31T14:22:17.000Z</published>
    <updated>2021-01-31T15:10:29.000Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近在写一个记账的APP，原因是一直用的口袋记账不更新了，到现在还不支持全面屏，于是想着扒了它的素材，自己仿写一个，第一问题就是怎么导入以前几年的账单数据？目前口袋记账是可以导出账单发送到自己的邮箱的，但是邮箱收到的Excel文档，在查阅一些资料之后，发现可以通过WPS打开文档另存为CSV文件，然后在项目里读取CSV文件转成数组，然后转模型获得model对象，就可以展示在列表之中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;CocoaPods&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod &lt;span class=&quot;string&quot;&gt;&quot;SwiftCSV&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Carthage&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;github &lt;span class=&quot;string&quot;&gt;&quot;swiftcsv/SwiftCSV&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="https://white8818.github.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="https://white8818.github.io/tags/iOS/"/>
    
      <category term="Swift" scheme="https://white8818.github.io/tags/Swift/"/>
    
      <category term="CSV" scheme="https://white8818.github.io/tags/CSV/"/>
    
  </entry>
  
  <entry>
    <title>使用WKWebview拦截替换本地资源</title>
    <link href="https://white8818.github.io/iOS%E5%BC%80%E5%8F%91/%E4%BD%BF%E7%94%A8WKWebview%E6%8B%A6%E6%88%AA%E6%9B%BF%E6%8D%A2%E6%9C%AC%E5%9C%B0%E8%B5%84%E6%BA%90/"/>
    <id>https://white8818.github.io/iOS开发/使用WKWebview拦截替换本地资源/</id>
    <published>2020-05-22T08:41:29.000Z</published>
    <updated>2021-03-03T16:36:23.000Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;WKWebView&lt;/code&gt;替换本地资源的原理是通过&lt;code&gt;NSURLProtocol&lt;/code&gt;代理&lt;code&gt;WKWebView&lt;/code&gt;内的所有网络请求, 中间拿到每次加载的&lt;code&gt;URL&lt;/code&gt;, 然后动态替换成本地沙盒内的对应路径下的资源文件.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;什么是NSURLProtocol&quot;&gt;&lt;a href=&quot;#什么是NSURLProtocol&quot; class=&quot;headerlink&quot; title=&quot;什么是NSURLProtocol&quot;&gt;&lt;/a&gt;什么是NSURLProtocol&lt;/h2&gt;&lt;p&gt;&lt;code&gt;NSURLProtocol&lt;/code&gt;是URL Loading System的重要组成部分。它听上去像一个协议类, 其实不是, 它是一个抽象类, 我们可以子类化来拦截网络请求。可以拦截的网络请求包括&lt;code&gt;NSURLSession&lt;/code&gt;，&lt;code&gt;NSURLConnection&lt;/code&gt;以及&lt;code&gt;UIWebvIew&lt;/code&gt;。本来之前是不能拦截&lt;code&gt;WKWebView&lt;/code&gt;的, 因为&lt;code&gt;WKWebView&lt;/code&gt; 在独立于 app 进程之外的进程中执行网络请求，请求数据不经过主进程，因此，在 &lt;code&gt;WKWebView&lt;/code&gt; 上直接使用 &lt;code&gt;NSURLProtocol&lt;/code&gt;无法拦截请求。&lt;/p&gt;
&lt;p&gt;但是有大神通过阅读webkit的源码, 以及使用反射的方式拿到了&lt;code&gt;WKWebView&lt;/code&gt;用来处理请求的上下文和注册反注册方法: &lt;code&gt;WKBrowsingContextController&lt;/code&gt;和&lt;code&gt;registerSchemeForCustomProtocol&lt;/code&gt;, &lt;code&gt;unregisterSchemeForCustomProtocol&lt;/code&gt;. 然后通过KVC拿到&lt;code&gt;browsingContextController&lt;/code&gt;实例, 把&lt;code&gt;http&lt;/code&gt;和&lt;code&gt;https&lt;/code&gt;请求注册给&lt;code&gt;NSURLProtocol&lt;/code&gt;处理.&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="https://white8818.github.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="https://white8818.github.io/tags/iOS/"/>
    
      <category term="WKWebView" scheme="https://white8818.github.io/tags/WKWebView/"/>
    
      <category term="热更新" scheme="https://white8818.github.io/tags/%E7%83%AD%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发-阿拉伯适配RTL</title>
    <link href="https://white8818.github.io/iOS%E5%BC%80%E5%8F%91/iOS%E5%BC%80%E5%8F%91-%E9%98%BF%E6%8B%89%E4%BC%AF%E9%80%82%E9%85%8DRTL/"/>
    <id>https://white8818.github.io/iOS开发/iOS开发-阿拉伯适配RTL/</id>
    <published>2019-10-24T03:21:55.000Z</published>
    <updated>2021-01-31T14:54:19.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是RTL布局&quot;&gt;&lt;a href=&quot;#什么是RTL布局&quot; class=&quot;headerlink&quot; title=&quot;什么是RTL布局&quot;&gt;&lt;/a&gt;什么是RTL布局&lt;/h2&gt;&lt;p&gt;RTL布局是针对中东地区的书写习惯适配的一套从右向左的布局方式，字面意思就是&lt;code&gt;Right-to-Left&lt;/code&gt;.&lt;br&gt;针对iOS9之后的RTL适配，苹果有一个&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPInternational/SupportingRight-To-LeftLanguages/SupportingRight-To-LeftLanguages.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;教我们怎么做适配。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="https://white8818.github.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="https://white8818.github.io/tags/iOS/"/>
    
      <category term="阿拉伯" scheme="https://white8818.github.io/tags/%E9%98%BF%E6%8B%89%E4%BC%AF/"/>
    
      <category term="RTL" scheme="https://white8818.github.io/tags/RTL/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客两台电脑同步配置</title>
    <link href="https://white8818.github.io/Hexo/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%A4%E5%8F%B0%E7%94%B5%E8%84%91%E5%90%8C%E6%AD%A5%E9%85%8D%E7%BD%AE/"/>
    <id>https://white8818.github.io/Hexo/Hexo博客两台电脑同步配置/</id>
    <published>2019-01-06T06:05:41.000Z</published>
    <updated>2021-03-03T16:38:47.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;两台电脑同步Hexo配置&quot;&gt;&lt;a href=&quot;#两台电脑同步Hexo配置&quot; class=&quot;headerlink&quot; title=&quot;两台电脑同步Hexo配置&quot;&gt;&lt;/a&gt;两台电脑同步Hexo配置&lt;/h3&gt;&lt;p&gt;最近实在忍受不了公司的老MacBook Pro了, 于是出了自己的air, 买了台新的Pro, 但是hexo又好不容易配置到老mac上, 怎么办呢 ?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用Git管理Hexo源码, 换新设备, 直接clone下来, 装一下环境不就行了!&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-GitHub创建私人仓库&quot;&gt;&lt;a href=&quot;#1-GitHub创建私人仓库&quot; class=&quot;headerlink&quot; title=&quot;1.GitHub创建私人仓库&quot;&gt;&lt;/a&gt;1.GitHub创建私人仓库&lt;/h4&gt;&lt;p&gt;这一步很简单, 打开GitHub创建一个新的仓库取名HexoCode.&lt;/p&gt;
&lt;p&gt;然后只需要把之前配置好的hexo文件夹上传上去, 这里注意是需要先提前设置好&lt;code&gt;gitignore&lt;/code&gt;文件, 因为我们的hexo已经安装了各种&lt;code&gt;npm&lt;/code&gt;依赖, 其实我们没必要把所有安装好的依赖也上传到github. 这里我的&lt;code&gt;gitignore&lt;/code&gt;添加了以下几项:&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://white8818.github.io/categories/Hexo/"/>
    
    
      <category term="配置" scheme="https://white8818.github.io/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="hexo" scheme="https://white8818.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Next主题定制</title>
    <link href="https://white8818.github.io/Hexo/Hexo+Next%E4%B8%BB%E9%A2%98%E5%AE%9A%E5%88%B6/"/>
    <id>https://white8818.github.io/Hexo/Hexo+Next主题定制/</id>
    <published>2018-12-25T10:54:09.000Z</published>
    <updated>2020-05-22T11:36:38.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;设置主题风格&quot;&gt;&lt;a href=&quot;#设置主题风格&quot; class=&quot;headerlink&quot; title=&quot;设置主题风格&quot;&gt;&lt;/a&gt;设置主题风格&lt;/h3&gt;&lt;p&gt;打开 &lt;code&gt;themes/next/_config.yml&lt;/code&gt;件，搜索 scheme 关键字，将你需用启用的 &lt;code&gt;scheme&lt;/code&gt; 前面注释 &lt;code&gt;#&lt;/code&gt; 去除即可。&lt;/p&gt;
&lt;h4 id=&quot;Scheme-Settings&quot;&gt;&lt;a href=&quot;#Scheme-Settings&quot; class=&quot;headerlink&quot; title=&quot;#Scheme Settings&quot;&gt;&lt;/a&gt;#Scheme Settings&lt;/h4&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#scheme: Muse #默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#scheme: Mist #Muse 的紧凑版本，整洁有序的单栏外观 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;scheme:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Pisces&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#双栏 Scheme，小家碧玉似的清新 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#scheme: Gemini #类似 Pisces&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://white8818.github.io/categories/Hexo/"/>
    
    
      <category term="配置" scheme="https://white8818.github.io/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="hexo" scheme="https://white8818.github.io/tags/hexo/"/>
    
      <category term="Next" scheme="https://white8818.github.io/tags/Next/"/>
    
      <category term="主题" scheme="https://white8818.github.io/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
</feed>
